import java.io.*;
import java.util.*;
 
// Java implementation of the approach
class Solution {
    public int trap(int[] arr) {
        int n=arr.length;
        int[] front= new int[n];
        int[] back= new int[n];
        int temp=0,sum=0;
		
		//Calculating the highest block from the left for each element
        for (int i=0;i<n;i++){
            if (temp<arr[i]){
                temp=arr[i];
            }
            front[i]=temp;
           
        }
        temp=0;
		//Calculating the highest block from the right for each element
        for (int i=n-1;i>=0;i--){
            if (temp<arr[i]){
                temp=arr[i];
            }
            back[i]=temp;
            
        }
		//Comparing left and right highest blocks and finding the highest block 
		//Subtracting the highest block by element's block 
         for (int j=0;j<n;j++){
             sum+= (front[j]<back[j] ? front[j]:back[j]) -arr[j];
         }       
        
        
        return sum;
    }
}
